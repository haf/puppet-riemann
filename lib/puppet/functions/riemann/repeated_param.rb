# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
#
# repeated_param.rb
#
require 'puppet/parser/functions'

# ---- original file header ----
#
# @summary
#   Joins parameters together with " " on a specific flag.
#
#Exmaple:
#
#  repeated_param('tag', ['a', 'b', 'c'])
#  => '--tag a --tag b --tag c'
#
#
#
Puppet::Functions.create_function(:'riemann::repeated_param') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    

    if args[0].is_a? Array
      args = args[0]
    end

    raise(Puppet::ParseError, "repeated_param/2: Wrong number of arguments " +
          "given (#{args.size} instead of 2.)") unless args.size == 2

    raise(Puppet::ParseError, "repeated_param/2: Second argument " +
          "must have #map") unless args[1].respond_to?(:map)

    flag = args[0]
    vals = args[1]

    vals.map { |i| "--#{flag} #{i}" }.join(' ')
  
  end
end
